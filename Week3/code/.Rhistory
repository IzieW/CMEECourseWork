file
write
script
setwd('Documents/CMEECourseWork/Week3/code')
setwd("Documents/CMEECourseWork/Week3/code")
setwd("Documents/CMEECourseWork/Week3/code")
getwd()
M <- (matrix(25, 5, 5))
M
Fun <- function(v){}
Fun <- function(v){}
{djjddd}
M <- (matrix(1:25, 5, 5))
M
Fun <- function(x){ x+1 }
print(apply(M, 1, Fun))
print(apply(M, 1, sum))
print(apply(M, 2, sum))
2+3+4+5+6
open.file(Vectorize2.R)
open.file Vectorize2.R
rm(list = ls())
stochrick <- function(p0 = runif(1000, .5, 1.5), r = 1.2, K = 1, sigma = 0.2,numyears = 100)
# runif 1000 random numbers from uniform .5, 1.5
{
N <- matrix(NA, numyears, length(p0))  #initialize empty matrix
N[1, ] <- p0
for (pop in 1:length(p0)) { #loop through the populations
for (yr in 2:numyears){ #for each pop, loop through the years
N[yr, pop] <- N[yr-1, pop] * exp(r * (1 - N[yr - 1, pop] / K) + rnorm(1, 0, sigma)) # add one fluctuation from normal distribution
}
}
return(N)
}
rm(list = ls())
stochrickvect <- function(p0 = runif(1000, .5, 1.5), r = 1.2, K = 1, sigma = 0.2,numyears = 100)
# runif 1000 random numbers from uniform .5, 1.5
{
  N <- matrix(NA, numyears, length(p0))  #initialize empty matrix
  N[1, ] <- p0 #populate row 1 with random numbers from P0, aka population 0 
  stochrickfun <- function(yr, pop, K, r, sigma){
    # N[yr, pop] populate location operated on with output of equation
    N[yr, pop] <- N[yr-1, pop] * exp(r * (1 - N[yr -1, pop] / K) + rnorm(1, 0, sigma)) # add one fluctuation from normal distribution
  }
  apply(N, c(1,2), stochrickfun)
 return(N)
}
stochrickfun
stochrickvect()
rm(list = ls())
stochrickvect <- function(p0 = runif(1000, .5, 1.5), r = 1.2, K = 1, sigma = 0.2,numyears = 100)
# runif 1000 random numbers from uniform .5, 1.5
{
  N <- matrix(NA, numyears, length(p0))  #initialize empty matrix
  N[1, ] <- p0 #populate row 1 with random numbers from P0, aka population 0 
  stochrickfun <- function(yr, pop){
    # N[yr, pop] populate location operated on with output of equation
    N[yr, pop] <- N[yr-1, pop] * exp(r * (1 - N[yr -1, pop] / K) + rnorm(1, 0, sigma)) # add one fluctuation from normal distribution
  }
  apply(N, c(1,2), stochrickfun)
 return(N)
}
stochrickvect()
rm(list = ls())
stochrickvect <- function(p0 = runif(1000, .5, 1.5), r = 1.2, K = 1, sigma = 0.2,numyears = 100)
# runif 1000 random numbers from uniform .5, 1.5
{
  N <- matrix(NA, numyears, length(p0))  #initialize empty matrix
  N[1, ] <- p0 #populate row 1 with random numbers from P0, aka population 0 
  stochrickfun <- function(yr, pop){
    # N[yr, pop] populate location operated on with output of equation
    N[yr, pop] <- N[yr-1, pop] * exp(r * (1 - N[yr -1, pop] / K) + rnorm(1, 0, sigma)) # add one fluctuation from normal distribution
  }
  apply(N, 1, stochrickfun)
 return(N)
}
stochrickvect()
# Runs the stochastic Ricker equation with gaussian fluctuations
rm(list = ls())
stochrick <- function(p0 = runif(1000, .5, 1.5), r = 1.2, K = 1, sigma = 0.2,numyears = 100)
# runif 1000 random numbers from uniform .5, 1.5
{
  N <- matrix(NA, numyears, length(p0))  #initialize empty matrix
  N[1, ] <- p0 #populate row 1 with random numbers from P0, aka population 0 
  for (pop in 1:length(p0)) { #loop through the populations
    for (yr in 2:numyears){ #for each pop, loop through the years
      N[yr, pop] <- N[yr-1, pop] * exp(r * (1 - N[yr - 1, pop] / K) + rnorm(1, 0, sigma)) # add one fluctuation from normal distribution
    
     }
  
  }
 return(N)
}
N
stochrick
stochrick()
plot(stochrick())
p0
rm(list = ls())
stochrickvect <- function(p0 = runif(1000, .5, 1.5), r = 1.2, K = 1, sigma = 0.2,numyears = 100)
# runif 1000 random numbers from uniform .5, 1.5
{
  N <- matrix(NA, numyears, length(p0))  #initialize empty matrix
  N[1, ] <- p0 #populate row 1 with random numbers from P0, aka population 0 
  stochrickfun <- function(yr, pop){
    # N[yr, pop] populate location operated on with output of equation
    N[yr, pop] <- N[yr-1, pop] * exp(r * (1 - N[yr -1, pop] / K) + rnorm(1, 0, sigma)) # add one fluctuation from normal distribution
  }
  apply(N, c(1,2), stochrickfun)
 return(N)
}
stockrickvect
stockrickvect()
rm(list = ls())
stochrickvect <- function(p0 = runif(1000, .5, 1.5), r = 1.2, K = 1, sigma = 0.2,numyears = 100)
# runif 1000 random numbers from uniform .5, 1.5
{
  N <- matrix(NA, numyears, length(p0))  #initialize empty matrix
  N[1, ] <- p0 #populate row 1 with random numbers from P0, aka population 0 
  stochrickfun <- function(yr, pop){
    # N[yr, pop] populate location operated on with output of equation
    N[yr, pop] <- N[yr-1, pop] * exp(r * (1 - N[yr -1, pop] / K) + rnorm(1, 0, sigma)) # add one fluctuation from normal distribution
  }
  apply(N, c(1,2), stochrickfun)
 return(N)
}
stochrickvect()
M
m
M <- matrix(1:25, 5, 5)
M
M[1]
M[1,]
M[2:,}
M[2:]
?tail
tail(M)
tail(M, 2)
tail(M, -2)
rm(list = ls())
stochrickvect <- function(p0 = runif(1000, .5, 1.5), r = 1.2, K = 1, sigma = 0.2,numyears = 100)
# runif 1000 random numbers from uniform .5, 1.5
{
  N <- matrix(NA, numyears, length(p0))  #initialize empty matrix
  N[1, ] <- p0 #populate row 1 with random numbers from P0, aka population 0 
  stochrickfun <- function(yr, pop){
    # N[yr, pop] populate location operated on with output of equation
    N[yr, pop] <- N[yr-1, pop] * exp(r * (1 - N[yr -1, pop] / K) + rnorm(1, 0, sigma)) # add one fluctuation from normal distribution
  }
  apply(tail(N,-1), c(1,2), stochrickfun)
 return(N)
}
stochrickvect()
rm(list = ls())
stochrickvect <- function(p0 = runif(1000, .5, 1.5), r = 1.2, K = 1, sigma = 0.2,numyears = 100)
# runif 1000 random numbers from uniform .5, 1.5
{
  N <- matrix(NA, numyears, length(p0))  #initialize empty matrix
  N[1, ] <- p0 #populate row 1 with random numbers from P0, aka population 0 
  stochrickfun <- function(yr, pop){
    # N[yr, pop] populate location operated on with output of equation
    N[yr, pop] <- N[yr-1, pop] * exp(r * (1 - N[yr -1, pop] / K) + rnorm(1, 0, sigma)) # add one fluctuation from normal distribution
  }
  apply(tail(N,-1), 1, stochrickfun)
 return(N)
}
stochrickvect()
x <- 1:20
X
x
y <- factor(rep(letters[1:5], each = 4)
y <- factor(rep(letters[1:5], each = 4))
y <- factor(rep(letters[1:5], each = 4))
y
tapply(x, y, sum)
M
m
M
M <- matrix(1:25, 5, 5)
M
M[1,]
M[,1]
rm(list = ls())
stochrickvect <- function(p0 = runif(1000, .5, 1.5), r = 1.2, K = 1, sigma = 0.2,numyears = 100)
# runif 1000 random numbers from uniform .5, 1.5
{
  N <- matrix(NA, numyears, length(p0))  #initialize empty matrix
  N[1, ] <- p0 #populate row 1 with random numbers from P0, aka population 0 
  stochrickfun <- function(yr, pop){
    # N[yr, pop] populate location operated on with output of equation
    N[yr, pop] <- N[yr-1, pop] * exp(r * (1 - N[yr -1, pop] / K) + rnorm(1, 0, sigma)) # add one fluctuation from normal distribution
  }
  sapply(1:length(p0), function(pop) sapply(2:numyears, function(yr) stochrickfun(yr,pop)))
  
  return(N)
}
stochrickvect()
rm(list = ls())
stochrickvect <- function(p0 = runif(1000, .5, 1.5), r = 1.2, K = 1, sigma = 0.2,numyears = 100)
# runif 1000 random numbers from uniform .5, 1.5
{
  N <- matrix(NA, numyears, length(p0))  #initialize empty matrix
  N[1, ] <- p0 #populate row 1 with random numbers from P0, aka population 0 
  stochrickfun <- function(yr, pop){
    # N[yr, pop] populate location operated on with output of equation
    N[yr, pop] <- N[yr-1, pop] * exp(r * (1 - N[yr -1, pop] / K) + rnorm(1, 0, sigma)) # add one fluctuation from normal distribution
  }
  for (yr in 2:numyears){
    apply(N, 1, stochrickfun)
  }
  
  return(N)
}
stochrickvect()
rm(list = ls())
stochrickvect <- function(p0 = runif(1000, .5, 1.5), r = 1.2, K = 1, sigma = 0.2,numyears = 100)
# runif 1000 random numbers from uniform .5, 1.5
{
  N <- matrix(NA, numyears, length(p0))  #initialize empty matrix
  N[1, ] <- p0 #populate row 1 with random numbers from P0, aka population 0 
  stochrickfun <- function(yr, pop){
    # N[yr, pop] populate location operated on with output of equation
    N[yr, pop] <- N[yr-1, pop] * exp(r * (1 - N[yr -1, pop] / K) + rnorm(1, 0, sigma)) # add one fluctuation from normal distribution
  }
  for (yr in 2:numyears){
    sapply(1:length(p0), function(pop), stochrickfun(yr, pop))
  }
  
  return(N)
}
rm(list = ls())
stochrickvect <- function(p0 = runif(1000, .5, 1.5), r = 1.2, K = 1, sigma = 0.2,numyears = 100)
# runif 1000 random numbers from uniform .5, 1.5
{
  N <- matrix(NA, numyears, length(p0))  #initialize empty matrix
  N[1, ] <- p0 #populate row 1 with random numbers from P0, aka population 0 
  stochrickfun <- function(yr, pop){
    # N[yr, pop] populate location operated on with output of equation
    N[yr, pop] <- N[yr-1, pop] * exp(r * (1 - N[yr -1, pop] / K) + rnorm(1, 0, sigma)) # add one fluctuation from normal distribution
  }
  for (yr in 2:numyears){
    sapply(1:length(p0), function(pop), stochrickfun(yr))
  }
  
  return(N)
}
rm(list = ls())
stochrickvect <- function(p0 = runif(1000, .5, 1.5), r = 1.2, K = 1, sigma = 0.2,numyears = 100)
# runif 1000 random numbers from uniform .5, 1.5
{
  N <- matrix(NA, numyears, length(p0))  #initialize empty matrix
  N[1, ] <- p0 #populate row 1 with random numbers from P0, aka population 0 
  stochrickfun <- function(yr, pop){
    # N[yr, pop] populate location operated on with output of equation
    N[yr, pop] <- N[yr-1, pop] * exp(r * (1 - N[yr -1, pop] / K) + rnorm(1, 0, sigma)) # add one fluctuation from normal distribution
  }
  for (yr in 2:numyears){
    sapply(1:length(p0), function(pop) stochrickfun(yr))
  }
  
  return(N)
}
stochrickvect()
rm(list = ls())
stochrickvect <- function(p0 = runif(1000, .5, 1.5), r = 1.2, K = 1, sigma = 0.2,numyears = 100)
# runif 1000 random numbers from uniform .5, 1.5
{
  N <- matrix(NA, numyears, length(p0))  #initialize empty matrix
  N[1, ] <- p0 #populate row 1 with random numbers from P0, aka population 0 
  stochrickfun <- function(yr, pop){
    # N[yr, pop] populate location operated on with output of equation
    N[yr, pop] <- N[yr-1, pop] * exp(r * (1 - N[yr -1, pop] / K) + rnorm(1, 0, sigma)) # add one fluctuation from normal distribution
  }
  for (yr in 2:numyears){
    sapply(1:length(p0), function(pop) stochrickfun(yr, pop))
  }
  
  return(N)
}
stochrickvect()
rm(list = ls())
stochrickvect <- function(p0 = runif(1000, .5, 1.5), r = 1.2, K = 1, sigma = 0.2,numyears = 100)
# runif 1000 random numbers from uniform .5, 1.5
{
  N <- matrix(NA, numyears, length(p0))  #initialize empty matrix
  N[1, ] <- p0 #populate row 1 with random numbers from P0, aka population 0 
  stochrickfun <- function(yr, pop){
    # N[yr, pop] populate location operated on with output of equation
    N[yr, pop] <- N[yr-1, pop] * exp(r * (1 - N[yr -1, pop] / K) + rnorm(1, 0, sigma))
    
    return(N)
    # add one fluctuation from normal distribution
  }
  for (yr in 2:numyears){
    sapply(1:length(p0), function(pop) stochrickfun(yr, pop))
  }
  
}
stochrickvect()
rm(list = ls())
stochrickvect <- function(p0 = runif(1000, .5, 1.5), r = 1.2, K = 1, sigma = 0.2,numyears = 100)
# runif 1000 random numbers from uniform .5, 1.5
{
  N <- matrix(NA, numyears, length(p0))  #initialize empty matrix
  N[1, ] <- p0 #populate row 1 with random numbers from P0, aka population 0 
  stochrickfun <- function(yr, pop){
    # N[yr, pop] populate location operated on with output of equation
    N[yr, pop] <- N[yr-1, pop] * exp(r * (1 - N[yr -1, pop] / K) + rnorm(1, 0, sigma))
     # add one fluctuation from normal distribution
  }
  for (yr in 2:numyears){
    sapply(1:length(p0), function(pop) stochrickfun(pop, yr))
  }
  
  return(N)
}
stochrickvect()
?Res
?res
m <- matrix(1:25, 5, 5)
m
for (x in length(m[1,)){]
for (x in length(m[1,)){ 
for (x in length(m[1,])){ 
for (x in length(m[,1])){ 
m[1,] <- m[1,] + 1}
m
rm(list = ls())
stochrickvect <- function(p0 = runif(1000, .5, 1.5), r = 1.2, K = 1, sigma = 0.2,numyears = 100)
{
  N <- matrix(NA, numyears, length(p0))  #initialize empty matrix
  N[1, ] <- p0 #populate row 1 with random numbers from P0, aka population 0 
  for (pop in 1:length(p0)) { #loop through the populations
      yr <- 2
      N[yr, pop] <- N[yr-1, pop] * exp(r * (1 - N[yr - 1, pop] / K) + rnorm(1, 0, sigma)) # add one fluctuation from normal distribution
      yr <- yr + 2
     }
  
  }
 return(N)
}rm(list = ls())
stochrickvect <- function(p0 = runif(1000, .5, 1.5), r = 1.2, K = 1, sigma = 0.2,numyears = 100)
{
  N <- matrix(NA, numyears, length(p0))  #initialize empty matrix
  N[1, ] <- p0 #populate row 1 with random numbers from P0, aka population 0 
  for (pop in 1:length(p0)) { #loop through the populations
      yr <- 2
      N[yr, pop] <- N[yr-1, pop] * exp(r * (1 - N[yr - 1, pop] / K) + rnorm(1, 0, sigma)) # add one fluctuation from normal distribution
      yr <- yr + 2
     }
 return(N)
}
rm(list = ls())
stochrickvect <- function(p0 = runif(1000, .5, 1.5), r = 1.2, K = 1, sigma = 0.2,numyears = 100)
{
  N <- matrix(NA, numyears, length(p0))  #initialize empty matrix
  N[1, ] <- p0 #populate row 1 with random numbers from P0, aka population 0 
  for (pop in 1:length(p0)) { #loop through the populations
      yr <- 2
      N[yr, pop] <- N[yr-1, pop] * exp(r * (1 - N[yr - 1, pop] / K) + rnorm(1, 0, sigma)) # add one fluctuation from normal distribution
      yr <- yr + 2
     }
 return(N)
}
stochrickvect()
rm(list = ls())
stochrickvect <- function(p0 = runif(1000, .5, 1.5), r = 1.2, K = 1, sigma = 0.2,numyears = 100)
{
  N <- matrix(NA, numyears, length(p0))  #initialize empty matrix
  N[1, ] <- p0 #populate row 1 with random numbers from P0, aka population 0 
  for (pop in 1:length(p0)) { #loop through the populations
      yr <- 2
      N[yr, pop] <- N[yr-1, pop] * exp(r * (1 - N[yr - 1, pop] / K) + rnorm(1, 0, sigma)) # add one fluctuation from normal distribution
      yr <- yr + 1
     }
 return(N)
}
stochrickvect()
m
m <- matrix(1:25, 5, 5)
m
for (x in length([,1])){
for (x in length(m[,1])){
m[x,] <- m[x,] + 1}
m
rm(list = ls())
stochrickvect <- function(p0 = runif(1000, .5, 1.5), r = 1.2, K = 1, sigma = 0.2,numyears = 100)
{
  N <- matrix(NA, numyears, length(p0))  #initialize empty matrix
  N[1, ] <- p0 #populate row 1 with random numbers from P0, aka population 0 
  for (yr in 2:numyears) { #loop through the populations
      pop <- N[yr, ]
      N[yr, pop] <- N[yr-1, pop] * exp(r * (1 - N[yr - 1, pop] / K) + rnorm(1, 0, sigma)) # add one fluctuation from normal distribution
     }
 return(N)
}
stochrickvect()
rm(list = ls())
stochrickvect <- function(p0 = runif(1000, .5, 1.5), r = 1.2, K = 1, sigma = 0.2,numyears = 100)
{
  N <- matrix(NA, numyears, length(p0))  #initialize empty matrix
  N[1, ] <- p0 #populate row 1 with random numbers from P0, aka population 0 
  for (yr in 2:numyears) { #loop through the populations
      pop <- N[yr, ]
      N[yr,] <- N[yr-1, pop] * exp(r * (1 - N[yr - 1, pop] / K) + rnorm(1, 0, sigma)) # add one fluctuation from normal distribution
     }
 return(N)
}
stochrickvect()
m
m <- matrix(1:25, 5, 5)
m
{
  N <- matrix(NA, numyears, length(p0))  #initialize empty matrix
  N[1, ] <- p0 #populate row 1 with random numbers from P0, aka population 0 
  for (yr in 2:numyears) { #loop through the populations
      N[yr,] <- N[yr-1,] * exp(r * (1 - N[yr - 1,] / K) + rnorm(1, 0, sigma)) # add one fluctuation from normal distribution
     }
 return(N)
}
rm(list = ls())
stochrickvect <- function(p0 = runif(1000, .5, 1.5), r = 1.2, K = 1, sigma = 0.2,numyears = 100)
{
  N <- matrix(NA, numyears, length(p0))  #initialize empty matrix
  N[1, ] <- p0 #populate row 1 with random numbers from P0, aka population 0 
  for (yr in 2:numyears) { #loop through the populations
      N[yr,] <- N[yr-1,] * exp(r * (1 - N[yr - 1,] / K) + rnorm(1, 0, sigma)) # add one fluctuation from normal distribution
     }
 return(N)
}
stochrickvect()
N
stockrickvect() = stockrick()
rm(list = ls())
stochrick <- function(p0 = runif(1000, .5, 1.5), r = 1.2, K = 1, sigma = 0.2,numyears = 100)
# runif 1000 random numbers from uniform .5, 1.5
{
  N <- matrix(NA, numyears, length(p0))  #initialize empty matrix
  N[1, ] <- p0 #populate row 1 with random numbers from P0, aka population 0 
  for (pop in 1:length(p0)) { #loop through the populations
    for (yr in 2:numyears){ #for each pop, loop through the years
      N[yr, pop] <- N[yr-1, pop] * exp(r * (1 - N[yr - 1, pop] / K) + rnorm(1, 0, sigma)) # add one fluctuation from normal distribution
    
     }
  
  }
 return(N)
}
stochrickvect() = stochrick()
rm(list = ls())
stochrickvect <- function(p0 = runif(1000, .5, 1.5), r = 1.2, K = 1, sigma = 0.2,numyears = 100)
{
  N <- matrix(NA, numyears, length(p0))  #initialize empty matrix
  N[1, ] <- p0 #populate row 1 with random numbers from P0, aka population 0 
  for (yr in 2:numyears) { #loop through the populations
      N[yr,] <- N[yr-1,] * exp(r * (1 - N[yr - 1,] / K) + rnorm(1, 0, sigma)) # add one fluctuation from normal distribution
     }
 return(N)
}
stochrickvect()
stochrick()
rm(list = ls())
stochrick <- function(p0 = runif(1000, .5, 1.5), r = 1.2, K = 1, sigma = 0.2,numyears = 100)
# runif 1000 random numbers from uniform .5, 1.5
{
  N <- matrix(NA, numyears, length(p0))  #initialize empty matrix
  N[1, ] <- p0 #populate row 1 with random numbers from P0, aka population 0 
  for (pop in 1:length(p0)) { #loop through the populations
    for (yr in 2:numyears){ #for each pop, loop through the years
      N[yr, pop] <- N[yr-1, pop] * exp(r * (1 - N[yr - 1, pop] / K) + rnorm(1, 0, sigma)) # add one fluctuation from normal distribution
    
     }
  
  }
 return(N)
}
stochrick()
head(stochrick())
rm(list = ls())
stochrickvect <- function(p0 = runif(1000, .5, 1.5), r = 1.2, K = 1, sigma = 0.2,numyears = 100)
{
  N <- matrix(NA, numyears, length(p0))  #initialize empty matrix
  N[1, ] <- p0 #populate row 1 with random numbers from P0, aka population 0 
  for (yr in 2:numyears) { #loop through the populations
      N[yr,] <- N[yr-1,] * exp(r * (1 - N[yr - 1,] / K) + rnorm(1, 0, sigma)) # add one fluctuation from normal distribution
     }
 return(N)
}
head(stochrickvect())
# Now write another function called stochrickvect that vectorizes the above to
# the extent possible, with improved performance: 
# Now write another function called stochrickvect that vectorizes the above to
# the extent possible, with improved performance: 
rm(list = ls())
stochrickvect <- function(p0 = runif(1000, .5, 1.5), r = 1.2, K = 1, sigma = 0.2,numyears = 100)
{
  N <- matrix(NA, numyears, length(p0))  #initialize empty matrix
  N[1, ] <- p0 #populate row 1 with random numbers from P0, aka population 0 
  for (yr in 2:numyears) { #loop through the populations
      N[yr,] <- N[yr-1,] * exp(r * (1 - N[yr - 1,] / K) + rnorm(1, 0, sigma)) # add one fluctuation from normal distribution
     }
 return(N)
}
# runif 1000 random numbers from uniform .5, 1.5
print("Vectorized Stochastic Ricker takes:")
print(system.time(res2<-stochrickvect()))
source("Vectorize2.R")
source("Vectorize2.R")
m <- matrix(1:25, 5, 5)
m
source(Vectorize2.R)
source("Vectorize2.R")
